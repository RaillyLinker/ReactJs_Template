[TODO]
(1단계)
- 템플릿 샘플 : 가로 스크롤
    1. 광고판 같은 무한 스크롤 좌우 버튼, 아래 버튼 존재, 한 아이템이 한 페이지 차지 및 버튼으로만 이동 가능, 시간 지나면 자동 이동, 
    2. 클릭으로 드래그 가능한 무한 가로 스크롤, 
    3. 휠로 이동 가능한 세로 스크롤과 드래그로 이동 가능한 가로 스크롤 복합
    위 모든 스크롤들의 위치 상태 저장
- 미디어 샘플 : 이미지 리사이징 개선
- 미디어 샘플 : Gif 프레임 분리
- 미디어 샘플 : 이미지 프레임 리스트를 Gif 로 합치기
- 미디어 샘플 : 캠 영상 촬영 및 녹화
- 미디어 샘플 : 3D 그래픽 처리
- 기타 샘플 : 파일 압축
- 기타 샘플 : 압축 파일 풀기
- 기타 샘플 : 지도 샘플
- 기타 샘플 : pdf 생성
- 기타 샘플 : 모바일에서 사진 찍기
- 기타 샘플 : 게시판 글 작성
- 기타 샘플 : 간단한 게임 추가

(2단계)
- 네트워크 샘플 : webrtc
- 미디어 샘플 : 동영상 자르기
- 미디어 샘플 : 동영상을 gif로 변경
- 미디어 샘플 : gif를 동영상으로 변경
- 계정 샘플 (전역 변수에 계정 정보 저장하고, 페이지 복귀시 리랜더링 되는지 확인)
- 기타 샘플 : 이미지 선택 샘플 (로컬에서 이미지 선택시 썸네일 표시. 누르면 전체 표시)
- 기타 샘플 : 동영상 선택 샘플 (로컬에서 영상 선택시 썸네일 표시. 누르면 재생됨)

(3단계)
- 미디어 샘플 : Gif 재생 조작 샘플 - 호버링하면 재생, 벗어나면 정지, Gif 를 동영상으로 만들고, 그것을 비디오로 표시한 후 이것으로 재생시간 조작 가능
- 네트워크 소켓 샘플 : 채팅(계정과 연동하여 멀티 채팅 - 서버랑 같이 작업)

(4단계)
- 네트워크 소켓 샘플 : 화상 채팅(채팅 샘플과 연동)

(시간 날 때)
- next js 로 바꾸는 방법
- electron 데스크톱 앱
- 오디오 / 비디오 다운로드 방지 처리
    미디어 스트리밍 프로토콜 사용 (HLS 또는 DASH)
    미디어 파일을 일반 HTTP로 제공하는 대신, HLS (HTTP Live Streaming) 또는 MPEG-DASH와 같은 스트리밍 프로토콜을 사용하는 것이 좋습니다. 
    이 프로토콜들은 비디오를 작은 조각들로 스트리밍하며, 사용자가 전체 비디오 파일을 쉽게 다운로드할 수 없게 만듭니다.
    예를 들어, HLS 스트리밍을 React에서 사용하려면 video.js나 hls.js와 같은 라이브러리를 사용할 수 있습니다.
- 이미지 리사이징 포멧 추가 : gif, avif