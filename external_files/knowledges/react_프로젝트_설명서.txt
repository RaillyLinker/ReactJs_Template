[기본 생성 파일/폴더 설명]
- package.json 파일은,
    Node.js 프로젝트의 필수 파일로, 프로젝트에 대한 메타데이터와 프로젝트에서 사용하는 패키지들의 의존성을 정의합니다. 

    name : 프로젝트의 이름입니다. 패키지를 배포할 때 사용됩니다.
    version : 프로젝트의 버전입니다. 일반적으로 Semantic Versioning을 따릅니다.
    private : 프로젝트가 공개 저장소에 게시되지 않도록 설정하는 데 사용됩니다. 
        값으로 true를 설정하면 해당 프로젝트는 npm 저장소에 퍼블리시되지 않습니다.
        예를들어 이것이 true 일 때, npm publish 명령어로 배포를 시도한다면 오류 메시지가 출력됩니다.
    dependencies : 프로덕션 환경에서 필요한 패키지들을 정의합니다. 패키지 이름과 버전 범위를 지정합니다.
    scripts : 프로젝트에서 자주 사용하는 명령어들을 정의합니다.
        이 명령어들은 터미널에서 npm run <script-name> 혹은 yarn <script-name>을 통해 실행할 수 있습니다. 
        scripts 항목은 프로젝트 작업을 자동화하고 간편하게 관리할 수 있도록 도와줍니다.
        예를 들어, start, build, test 등이 있습니다.
    eslintConfig : package.json 파일 내에서 ESLint 설정을 정의하는 섹션입니다. 
        ESLint는 JavaScript 및 JSX 코드의 스타일과 품질을 유지하기 위해 사용되는 정적 코드 분석 도구입니다. 
        eslintConfig 항목을 통해 프로젝트의 코드 스타일 규칙을 설정하고, 다양한 규칙을 적용할 수 있습니다.
    browserslist : React 프로젝트에서 사용되는 브라우저 지원 설정입니다. 
        이 설정은 주로 Autoprefixer나 다양한 JavaScript 번들러(bundler)들이 지원하는 브라우저의 범위를 정의하는 데 사용됩니다.

        production : 이 속성은 배포(production) 환경에서 지원할 브라우저의 목록을 나타냅니다. 
            각 항목은 브라우저의 사용률을 기준으로 지정됩니다. 
            예를 들어 ">0.2%"는 전 세계 사용률이 0.2% 이상인 모든 브라우저를 포함하며, 
            "not dead"는 사용률이 거의 없는(deprecated) 브라우저를 제외합니다. 
            "not op_mini all"은 Opera Mini 브라우저를 제외하는 조건입니다.
        development : 이 속성은 개발(development) 환경에서 지원할 브라우저의 목록을 나타냅니다. 
            여기서는 각각의 브라우저의 최신 버전만을 지정했습니다. 
            즉, 개발 중에는 Chrome, Firefox, Safari의 각각 최신 버전만을 지원합니다.

- package-lock.json 파일은,

- node_modules 폴더는,
    Node.js 프로젝트에서 의존성 모듈들이 설치되는 디렉토리입니다. 
    프로젝트의 package.json 파일에 명시된 의존성 목록을 기반으로, 
    npm 또는 yarn 같은 패키지 매니저가 이 폴더에 필요한 모듈을 다운로드하고 설치합니다.
    이 폴더는 일반적으로 .gitignore 파일에 추가되어 git 저장소에 포함되지 않도록 처리합니다.

- react-app-env.d.ts 파일은,
    npx create-react-app my-app --template typescript 명령어를 치면 자동으로 생성되는 파일로,
    이를 지우면 process.env.환경변수이름으로 환경변수를 불러오는데 에러가 발생합니다.
    처음 파일이 생성되면 ///<reference types="react-scripts" /> 이라고 딱 한 줄 적혀있습니다.
    ///<reference types="react-scripts" /> 코드는 설정 지시문(Configuration directive)으로, 
    타입스크립트 컴파일러에게 CRA에 대한 타입 정의 파일을 사용하도록 지시합니다.
    이를 통해 타입스크립트 컴파일러는 CRA에서 제공하는 환경에 대한 타입 정보를 이해하고, 
    해당 환경에서 사용되는 모듈이나 변수에 대한 타입 검사를 수행할 수 있습니다.
    즉, 위 설정 지시문을 통해 CRA에서 제공하는 기능 및 API에 대한 타입 검사가 가능해지며, 
    개발 도구의 자동 완성 기능등을 보다 정확하게 활용할 수 있게 됩니다.

- reportWebVitals.ts 파일은,
    npx create-react-app my-app --template typescript 명령어를 치면 자동으로 생성되는 파일로,
    React 애플리케이션에서 웹 바이탈(Web Vitals) 성능 측정을 위해 사용되는 파일입니다. 
    Web Vitals는 Google이 제공하는 웹 성능 측정 지표로, 사용자 경험을 평가하는 데 중요한 역할을 합니다. 
    이 파일은 Create React App (CRA)로 생성된 프로젝트에 기본적으로 포함됩니다.